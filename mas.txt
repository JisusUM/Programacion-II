def optGym():
        def create():
            _nit = int(input("Ingrese el Nit : "))
            _name= str(input("Ingrese el nombre del gimnasio: "))
            _address = str(input("Ingrese la direcci贸n: "))
            _phone = str(input("Ingrese telefono: "))
            nuevoGym = Gym(_nit, _name, _address, _phone)
            list.append(nuevoGym)
            print(nuevoGym)

        def listar():
            print("  ")
            print("-----Informe-----")
            for indice in range(0, len(list)):
                print(f"{indice + 1 } - {list[indice]}")


        def delete():
            listar()
            indice = int(input("Ingrese el numero del Gimnasio a eliminar"))
            print(f"Esta seguro/a de eliminar a {list[indice -1].getName()} {list[indice -1].getPhone()} {list[indice -1].getAddress()}")
            respuesta = input("S- si N- no").lower()
            if (respuesta == "s"):
                list.remove(list[indice - 1])

        def modificar():
            listar()
            indice = int(input("Ingrese el numero del gimnasio a modificar: "))
            _name = input("Ingrese el nuevo nombre del gimnasio: ")
            list[indice - 1].setName(_name)
            _address = input("Ingrese la nueva direcci贸n: ")
            list[indice - 1].setAddress(_address)
            _phone = input("Ingrese el nuevo telefono: ")
            list[indice - 1].setName(_phone)
        opt = ''
        while (opt != "x"):
            opt = str(input("""  Ingrese una de las siguientes opciones
        //-----------//-----------//-----------//
        C-) CREAR NUEVO GIMNASIO
        R-) LISTAR GIMNASIOS
        U-) MODIFICAR GIMNASIO
        D-) ELIMINAR GIMNASIO
        X-) SALIR
        """).lower())
        #F-) BUSCAR GIMNASIO

            if opt == 'x':
                print('Hasta Pronto')
            if opt == 'c':
                create()
            if opt == 'r':
                listar()
            if opt == 'u':
                modificar()
            if opt == 'd':
                delete()
            else:
                print("Opcion incorrecta")

    def partition(list, start, end, compare_func):
        pivot = list[start]
        low = start + 1
        high = end

        while True:
            while low <= high and compare_func(list[high], pivot):
                high = high - 1

            while low <= high and not compare_func(list[low], pivot):
                low = low + 1

            if low <= high:
                list[low], list[high] = list[high], list[low]
            else:
                break

        list[start], list[high] = list[high], list[start]

        return high

    def quick_sort(list, start, end, compare_func):
        if start >= end:
            return

        p = partition(list, start, end, compare_func)
        quick_sort(list, start, p-1, compare_func)
        quick_sort(list, p+1, end, compare_func)
            
        list=[]
        gym1 = Gym(900712196, "European Hardcore", "Chipre", "311 6987561")
        list.append(gym1)
        gym2 = Gym(800206239, "MMA Training", "La Sultana", "315 9876325")
        list.append(gym2)
        quick_sort(list, 0, len(list) - 1, lambda x, y: x.nit < y.nit)
        for Gym in list:
            print(Gym)


    def optCampus():
        def createC():
            _campusNit = str(input("Ingrese el Nit : "))
            _campusName= str(input("Ingrese el nombre del gimnasio: "))
            _campusPhone = str(input("Ingrese la direcci贸n: "))
            _campusAddreess = str(input("Ingrese telefono: "))
            nuevo = Campus(_campusNit,_campusName,_campusPhone,_campusAddreess)
            campus.append(nuevo)
            print(nuevo)

        def listarC():
            print("  ")
            print("-----Informe-----")
            for indice in range(0, len(campus)):
                print(f"{indice + 1 } - {campus[indice]}")


        def deleteC():
            listarC()
            indice = int(input("Ingrese el numero del Gimnasio a eliminar"))
            print(f"Esta seguro/a de eliminar a {campus[indice -1].getCampusName()} {campus[indice -1].getCampusPhone()} {campus[indice -1].getCampusAddreess()}")
            respuesta = input("S- si N- no").lower()
            if (respuesta == "s"):
                campus.remove(campus[indice - 1])

        def modificarC():
            listarC()
            indice = int(input("Ingrese el numero del gimnasio a modificar: "))
            _campusName = input("Ingrese el nuevo nombre del gimnasio: ")
            campus[indice - 1].setCampusName(_campusName)
            _campusPhone = input("Ingrese la nueva direcci贸n: ")
            campus[indice - 1].setCampusPhone(_campusPhone)
            _campusAddreess = input("Ingrese el nuevo telefono: ")
            campus[indice - 1].setCampusAddreess(_campusAddreess)
        opt = ''
        while (opt != "x"):
            opt = str(input("""  Ingrese una de las siguientes opciones
        //-----------//-----------//-----------//
        C-) CREAR NUEVO CAMPUS
        R-) LISTAR CAMPUS
        U-) MODIFICAR CAMPUS
        D-) ELIMINAR CAMPUS
        X-) SALIR
        """).lower())
        #F-) BUSCAR GIMNASIO

            if opt == 'x':
                print('Hasta Pronto')
            if opt == 'c':
                createC()
            if opt == 'r':
                listarC()
            if opt == 'u':
                modificarC()
            if opt == 'd':
                deleteC()
            else:
                print("Opcion incorrecta")
        
    def partition(campus, start, end, compare_func):
        pivot = campus[start]
        low = start + 1
        high = end

        while True:
            while low <= high and compare_func(campus[high], pivot):
                high = high - 1

            while low <= high and not compare_func(campus[low], pivot):
                low = low + 1

            if low <= high:
                campus[low], campus[high] = campus[high], campus[low]
            else:
                break

        campus[start], campus[high] = campus[high], campus[start]

        return high

    def quick_sort(campus, start, end, compare_func):
        if start >= end:
            return

        p = partition(campus, start, end, compare_func)
        quick_sort(campus, start, p-1, compare_func)
        quick_sort(campus, p+1, end, compare_func)

        campus=[]
        campus1 = Campus("900712196", "European Hardcore", "3205456526", "ldsjfodsjfoisa@gmail.com")
        campus.append(campus1)
        campus2 = Campus("900712196", "European Hardcore", "3205456526", "ldsjfodsjfoisa@gmail.com")
        campus.append(campus2)
        quick_sort(campus, 0, len(campus) - 1, lambda x, y: x.campusNit < y.campusNit)
        for Campus in campus:
            print(Campus)